====== XLIB server ====

xlib/XGContext.m ----- XGContext : (gsc)GSContext : (gui)NSGraphicsContext
xlib/XGGState.m ------ XGGState : (gsc)GSGState : NSObject

xlib/XGFontInfo.m ---- XGFontInfo : (gui)GSFontInfo
                       GSFontInfo (XBackend)
xlib/XGFontManager.m - XGFontEnumerator : (gui)GSFontEnumerator
xlib/XGFontSetInfo.m - XGFontSetEnumerator : (gui)GSFontEnumerator
                       XGFontSetFontInfo : (gui)GSFontInfo

xlib/XGGeometry.m ---- Geometry functions
xlib/XGCommonFont.m -- Font functions
xlib/XGBitmap.m ------ Image functions


====== GSC ======
gsc/GSContext.m ------ GSContext : NSGraphicsContext
gsc/GSGState.m ------- GSGState : NSObject

====== ART server ======

ARTGstate  : (gsc)GSGState  : NSObject
ARTContext : (gsc)GSContext : (gui)NSGraphicsContext

===================================================================
=== NSApplication birth sequence (server = x11, graphics = art) ===
===================================================================
Functions.m	     NSApplicationMain(int argc, const char **argv);

NSApplication.m	     [[NSApplicaion class] sharedApplication]
               	     [[NSApplication alloc] init]
               	     [NSApplication _init]
		     
                     initialize_gnustep_backend()
GSBackend.m(back)    [GSBackend initializeBackend];
XGServer.m(back/x11) [XGServer initializeBackend];
                     [GSDisplayServer setDefaultServerClass: [XGServer class]];
ARTContext(back/art) [ARTContext initializeBackend];
                     [NSGraphicsContext setDefaultContextClass: [ARTContext class]];
		     
		     attributes = [[NSScreen mainScreen] deviceDescription];
                     _default_context = [NSGraphicsContext graphicsContextWithAttributes: attributes];
                     [NSGraphicsContext setCurrentContext: _default_context];
		     
NSGraphicsContext.m  [];
                     srv = [GSDisplayServer serverWithAttributes: nil];
                     [GSDisplayServer setCurrentServer: srv];
		   
               	     [NSApplication run] // Here is run loop of application
                     [NSApp nextEventMatchingMask:untilDate:inMode:dequeue:]
GSDisplayServer.m    GSCurrentServer()
GSDisplayServer.h    DPSGetEvent()
                     [GSDisplayServer getEventMatchingMask:beforeDate:inMode:dequeue:]
