--- gnustep-gui-0.24.1.orig/Source/NSMenuItemCell.m	2013-10-15 21:41:17.000000000 +0300
+++ gnustep-gui-0.24.1/Source/NSMenuItemCell.m	2018-07-14 21:45:10.834440494 +0300
@@ -46,6 +46,7 @@
 #import "AppKit/NSMenuItemCell.h"
 #import "AppKit/NSMenuView.h"
 #import "AppKit/NSParagraphStyle.h"
+#import "AppKit/NSStringDrawing.h"
 #import "GNUstepGUI/GSTheme.h"
 #import "GSGuiPrivate.h"
 
@@ -255,6 +256,7 @@
   if (m != 0)
     {
       BOOL shift;
+      NSFontTraitMask traits = 0;
       // shift mask and not an upper case string?
       shift = (m & NSShiftKeyMask) & ![key isEqualToString: ucKey];
       key = [NSString stringWithFormat:@"%@%@%@%@%@",
@@ -263,11 +265,46 @@
                       shift ? shiftKeyString : @"",
                       (m & NSCommandKeyMask) ? commandKeyString : @"",
                       key];
+      if (m & NSAlternateKeyMask)
+        traits |= NSItalicFontMask;
+
+      if (m & NSControlKeyMask)
+        traits |= NSBoldFontMask;
+
+      if (traits)
+        {
+          NSFont *font;
+          
+          font = [[NSFontManager sharedFontManager]
+                           fontWithFamily:[[NSFont controlContentFontOfSize:0.0] familyName]
+                                   traits:traits
+                                   weight:(traits & NSBoldFontMask) ? 9 : 5
+                                     size:[NSFont systemFontSize]];
+          if (font)
+            [self setKeyEquivalentFont:font];
+        }
     }
 
   return key;
 }
 
+- (NSSize) _sizeKeyEquivalentText: (NSString*)title
+{
+  NSSize size;
+
+  if (title == nil) {
+      return NSMakeSize (0,0);
+    }
+
+  if (_keyEquivalentFont) {
+    size = [title sizeWithAttributes: @{NSFontAttributeName: _keyEquivalentFont}];
+  }
+  else {
+    size = [self _sizeText: title];
+  }
+  return size;
+}
+
 - (void) calcSize
 {
   NSSize   componentSize;
@@ -339,7 +376,7 @@
   _titleWidth = componentSize.width;
   if (componentSize.height > neededMenuItemHeight)
     neededMenuItemHeight = componentSize.height;
-  componentSize = [self _sizeText: [self _keyEquivalentString]];
+  componentSize = [self _sizeKeyEquivalentText: [self _keyEquivalentString]];
   _keyEquivalentWidth = componentSize.width;
   if (componentSize.height > neededMenuItemHeight)
     neededMenuItemHeight = componentSize.height;
@@ -735,8 +772,17 @@
    * else they would be displayed one over the other one.
    */
   else if (![[_menuView menu] _ownedByPopUp] || (_imageToDisplay == nil))
-    {    
-      [self _drawText: [self _keyEquivalentString] inFrame: cellFrame];
+    {
+      if (_keyEquivalentFont != nil) {
+        NSAttributedString *aString;
+        
+        aString = [[NSAttributedString alloc] initWithString: [self _keyEquivalentString]
+                                                  attributes: @{NSFontAttributeName: _keyEquivalentFont}];
+        [self _drawAttributedText: aString inFrame: cellFrame];
+      }
+      else {
+        [self _drawText: [self _keyEquivalentString] inFrame: cellFrame];
+      }
     }
 }
 
