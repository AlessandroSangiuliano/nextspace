--- ./WindowMaker-0.95.7/src/window.c	2015-08-11 21:41:14.000000000 +0300
+++ ./WindowMaker/src/window.c	2018-06-26 22:29:23.754123341 +0300
@@ -755,9 +755,10 @@
 
 	wwin->orig_main_window = wwin->main_window;
 
-	if (wwin->flags.is_gnustep)
+	if (wwin->flags.is_gnustep) {
 		wwin->client_flags.shared_appicon = 0;
-
+		wwin->defined_user_flags.shared_appicon = 0;
+	}
 	if (wwin->main_window) {
 		XTextProperty text_prop;
 
@@ -1161,6 +1162,15 @@
 			y -= wwin->frame->top_width + wwin->frame->bottom_width;
 	}
 
+	/* We're starting managing already existed window at our startup.
+	 * Adjust window position so window will not be shifted down and right
+	 * after decorations added.
+	*/
+	if (scr->flags.startup) {
+	  x -= 1;
+	  y -= (wwin->frame->top_width + 1);
+	}
+
 	/*
 	 * wWindowConfigure() will init the client window's size
 	 * (wwin->client.{width,height}) and all other geometry
@@ -1314,10 +1324,9 @@
 		}
 	}
 	wWindowResetMouseGrabs(wwin);
-
 	if (!WFLAGP(wwin, no_bind_keys))
 		wWindowSetKeyGrabs(wwin);
-
+  
 	WMPostNotificationName(WMNManaged, wwin, NULL);
 	wColormapInstallForWindow(scr, scr->cmap_window);
 
@@ -1457,7 +1466,7 @@
 	wSetFocusTo(scr, wwin);
 	wWindowResetMouseGrabs(wwin);
 	wWindowSetKeyGrabs(wwin);
-
+        
 	return wwin;
 }
 
@@ -2212,7 +2221,16 @@
 			if (fwin->lbutton_image && !fwin->lbutton_image->shared)
 				wPixmapDestroy(fwin->lbutton_image);
 
-			fwin->lbutton_image = scr->b_pixmaps[WBUT_ICONIFY];
+#ifdef NEXTSPACE
+			if (scr->flags.modifier_pressed) {
+                          if (wwin->flags.maximized) {
+                            fwin->lbutton_image = scr->b_pixmaps[WBUT_RESTORE];
+                          } else {
+                            fwin->lbutton_image = scr->b_pixmaps[WBUT_MAXIMIZE];
+                          }
+                        } else
+#endif
+				fwin->lbutton_image = scr->b_pixmaps[WBUT_ICONIFY];
 		}
 	}
 #ifdef XKB_BUTTON_HINT
@@ -2266,7 +2284,12 @@
 			if (fwin->rbutton_image && !fwin->rbutton_image->shared)
 				wPixmapDestroy(fwin->rbutton_image);
 
-			fwin->rbutton_image = scr->b_pixmaps[WBUT_CLOSE];
+#ifdef NEXTSPACE
+			if (scr->flags.modifier_pressed)
+				fwin->rbutton_image = scr->b_pixmaps[WBUT_KILL];
+			else
+#endif
+				fwin->rbutton_image = scr->b_pixmaps[WBUT_CLOSE];
 		}
 	}
 
@@ -2567,6 +2590,12 @@
 	}
 
 	wRootMenuBindShortcuts(wwin->frame->core->window);
+#ifdef NEXTSPACE
+  XGrabKey(dpy, XKeysymToKeycode(dpy, XK_Super_L), 0, wwin->client_win, True,
+    GrabModeAsync, GrabModeAsync);
+  XGrabKey(dpy, XKeysymToKeycode(dpy, XK_Super_R), 0, wwin->client_win, True,
+    GrabModeAsync, GrabModeAsync);
+#endif
 }
 
 void wWindowResetMouseGrabs(WWindow * wwin)
@@ -3100,6 +3129,15 @@
 			wapp = wApplicationOf(wwin->main_window);
 			if (wapp && !WFLAGP(wwin, no_appicon))
 				wHideApplication(wapp);
+#ifdef NEXTSPACE
+		} else if (event->xbutton.state & MOD_MASK) {
+			if (wwin->flags.maximized) {
+				wMaximizeWindow(wwin, 0);                    
+			}
+			else {
+				wMaximizeWindow(wwin, MAX_VERTICAL | MAX_HORIZONTAL);
+			}
+#endif
 		} else if (event->xbutton.state == 0) {
 			wIconifyWindow(wwin);
 		}
