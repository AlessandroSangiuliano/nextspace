--- ./WindowMaker-0.95.7/src/window.c	2015-08-11 21:41:14.000000000 +0300
+++ ./WindowMaker/src/window.c	2018-07-10 15:46:50.815264497 +0300
@@ -755,9 +755,10 @@
 
 	wwin->orig_main_window = wwin->main_window;
 
-	if (wwin->flags.is_gnustep)
+	if (wwin->flags.is_gnustep) {
 		wwin->client_flags.shared_appicon = 0;
-
+		wwin->defined_user_flags.shared_appicon = 0;
+	}
 	if (wwin->main_window) {
 		XTextProperty text_prop;
 
@@ -1161,6 +1162,15 @@
 			y -= wwin->frame->top_width + wwin->frame->bottom_width;
 	}
 
+	/* We're starting to manage already existed window at our startup.
+	 * Adjust window position so window will not be shifted down and right
+	 * after decorations added.
+	*/
+	if (scr->flags.startup) {
+	  x -= 1;
+	  y -= (wwin->frame->top_width + 1);
+	}
+
 	/*
 	 * wWindowConfigure() will init the client window's size
 	 * (wwin->client.{width,height}) and all other geometry
@@ -1574,7 +1584,8 @@
 			if (!tmp) {
 				tmp = scr->focused_window;
 				while (tmp) {	/* look for one in the window list first */
-					if (!WFLAGP(tmp, no_focusable) && !WFLAGP(tmp, skip_window_list)
+					if (!WFLAGP(tmp, no_focusable)
+					    && (!WFLAGP(tmp, skip_window_list) || tmp->flags.is_gnustep)
 					    && (tmp->flags.mapped || tmp->flags.shaded))
 						break;
 					tmp = tmp->prev;
@@ -2075,6 +2086,14 @@
 	int synth_notify = False;
 	int resize;
 
+  /* if window size is guaranteed to fail - fix it to some reasonable
+   * defaults. original report was a problem with VirtualBox VM. */
+	if (req_height > SHRT_MAX)
+		req_height = 480;
+  
+	if (req_width > SHRT_MAX)
+		req_height = 640;
+           
 	resize = (req_width != wwin->client.width || req_height != wwin->client.height);
 	/*
 	 * if the window is being moved but not resized then
@@ -2212,7 +2231,16 @@
 			if (fwin->lbutton_image && !fwin->lbutton_image->shared)
 				wPixmapDestroy(fwin->lbutton_image);
 
-			fwin->lbutton_image = scr->b_pixmaps[WBUT_ICONIFY];
+#ifdef NEXTSPACE
+			if (scr->flags.modifier_pressed) {
+				if (wwin->flags.maximized) {
+					fwin->lbutton_image = scr->b_pixmaps[WBUT_RESTORE];
+				} else {
+					fwin->lbutton_image = scr->b_pixmaps[WBUT_MAXIMIZE];
+				}
+			} else
+#endif
+				fwin->lbutton_image = scr->b_pixmaps[WBUT_ICONIFY];
 		}
 	}
 #ifdef XKB_BUTTON_HINT
@@ -2266,7 +2294,12 @@
 			if (fwin->rbutton_image && !fwin->rbutton_image->shared)
 				wPixmapDestroy(fwin->rbutton_image);
 
-			fwin->rbutton_image = scr->b_pixmaps[WBUT_CLOSE];
+#ifdef NEXTSPACE
+			if (scr->flags.modifier_pressed)
+				fwin->rbutton_image = scr->b_pixmaps[WBUT_KILL];
+			else
+#endif
+				fwin->rbutton_image = scr->b_pixmaps[WBUT_CLOSE];
 		}
 	}
 
@@ -2567,6 +2600,12 @@
 	}
 
 	wRootMenuBindShortcuts(wwin->frame->core->window);
+#ifdef NEXTSPACE
+  XGrabKey(dpy, XKeysymToKeycode(dpy, XK_Super_L), 0, wwin->client_win, True,
+    GrabModeAsync, GrabModeAsync);
+  XGrabKey(dpy, XKeysymToKeycode(dpy, XK_Super_R), 0, wwin->client_win, True,
+    GrabModeAsync, GrabModeAsync);
+#endif
 }
 
 void wWindowResetMouseGrabs(WWindow * wwin)
@@ -2802,6 +2841,7 @@
 	if (event->xbutton.button == Button1)
 		wRaiseFrame(wwin->frame->core);
 
+#ifndef NEXTSPACE
 	if (event->xbutton.window != wwin->frame->resizebar->window) {
 		if (XGrabPointer(dpy, wwin->frame->resizebar->window, True,
 				 ButtonMotionMask | ButtonReleaseMask | ButtonPressMask,
@@ -2818,6 +2858,7 @@
 		wMouseResizeWindow(wwin, event);
 		XUngrabPointer(dpy, CurrentTime);
 	}
+#endif
 }
 
 static void titlebarDblClick(WCoreWindow *sender, void *data, XEvent *event)
@@ -2971,6 +3012,7 @@
 			wSelectWindow(wwin, !wwin->flags.selected);
 			return;
 		}
+#ifndef NEXTSPACE
 		if (event->xbutton.window != wwin->frame->titlebar->window
 		    && XGrabPointer(dpy, wwin->frame->titlebar->window, False,
 				    ButtonMotionMask | ButtonReleaseMask | ButtonPressMask,
@@ -2982,6 +3024,7 @@
 		wMouseMoveWindow(wwin, event);
 
 		XUngrabPointer(dpy, CurrentTime);
+#endif
 	} else if (event->xbutton.button == Button3 && event->xbutton.state == 0
 		   && !wwin->flags.internal_window && !WCHECK_STATE(WSTATE_MODAL)) {
 		WObjDescriptor *desc;
@@ -3100,6 +3143,15 @@
 			wapp = wApplicationOf(wwin->main_window);
 			if (wapp && !WFLAGP(wwin, no_appicon))
 				wHideApplication(wapp);
+#ifdef NEXTSPACE
+		} else if (event->xbutton.state & MOD_MASK) {
+			if (wwin->flags.maximized) {
+				wUnmaximizeWindow(wwin);
+			}
+			else {
+				wMaximizeWindow(wwin, MAX_VERTICAL | MAX_HORIZONTAL);
+			}
+#endif
 		} else if (event->xbutton.state == 0) {
 			wIconifyWindow(wwin);
 		}
