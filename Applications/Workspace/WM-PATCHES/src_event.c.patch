--- ./WindowMaker-0.95.7/src/event.c	2015-08-11 21:41:14.000000000 +0300
+++ ./WindowMaker/src/event.c	2017-12-21 00:38:34.775865172 +0200
@@ -80,6 +80,9 @@
 #include "switchmenu.h"
 #include "wsmap.h"
 
+#ifdef NEXTSPACE
+#include <Workspace+WindowMaker.h>
+#endif
 
 #define MOD_MASK wPreferences.modifier_mask
 
@@ -90,6 +93,9 @@
 static void handleMapNotify(XEvent *event);
 static void handleUnmapNotify(XEvent *event);
 static void handleButtonPress(XEvent *event);
+#ifdef NEXTSPACE
+static void handleButtonRelease(XEvent * event);
+#endif
 static void handleExpose(XEvent *event);
 static void handleDestroyNotify(XEvent *event);
 static void handleConfigureRequest(XEvent *event);
@@ -229,6 +235,11 @@
 		handleUnmapNotify(event);
 		break;
 
+#ifdef NEXTSPACE
+	case ButtonRelease:
+		handleButtonRelease(event);
+          break;
+#endif
 	case ButtonPress:
 		handleButtonPress(event);
 		break;
@@ -580,9 +591,15 @@
 		 * XRRUpdateConfiguration when screen configuration change notify
 		 * events are generated */
 		XRRUpdateConfiguration(event);
+#ifdef NEXTSPACE                
+		for (int i = 0; i < w_global.screen_count; i++) {
+			XWUpdateScreenInfo(wScreenWithNumber(i));
+		}
+#else
 		WCHANGE_STATE(WSTATE_RESTARTING);
 		Shutdown(WSRestartPreparationMode);
 		Restart(NULL,True);
+#endif
 	}
 #endif
 }
@@ -670,6 +687,9 @@
 
 	wwin = wWindowFor(window);
 	if (wwin) {
+#ifdef NEXTSPACE
+		dispatch_sync(workspace_q, ^{ XWApplicationDidCloseWindow(wwin); });
+#endif
 		wUnmanageWindow(wwin, False, True);
 	}
 
@@ -809,10 +829,22 @@
 
 	if (!wPreferences.disable_root_mouse && event->xbutton.window == scr->root_win) {
 		if (event->xbutton.button == Button1 && wPreferences.mouse_button1 != WA_NONE) {
+#ifdef NEXTSPACE
+			if (!strcmp(scr->focused_window->wm_class, "GNUstep")) {
+				XSendEvent(dpy, scr->focused_window->client_win, True, ButtonPressMask, event);
+			}
+			else
+#endif
 			executeButtonAction(scr, event, wPreferences.mouse_button1);
 		} else if (event->xbutton.button == Button2 && wPreferences.mouse_button2 != WA_NONE) {
 			executeButtonAction(scr, event, wPreferences.mouse_button2);
 		} else if (event->xbutton.button == Button3 && wPreferences.mouse_button3 != WA_NONE) {
+#ifdef NEXTSPACE
+			if (!strcmp(scr->focused_window->wm_class, "GNUstep")) {
+				XSendEvent(dpy, scr->focused_window->client_win, True, ButtonPressMask, event);
+			}
+			else
+#endif
 			executeButtonAction(scr, event, wPreferences.mouse_button3);
 		} else if (event->xbutton.button == Button8 && wPreferences.mouse_button8 != WA_NONE) {
 			executeButtonAction(scr, event, wPreferences.mouse_button8);
@@ -873,6 +905,19 @@
 	}
 }
 
+#ifdef NEXTSPACE
+static void handleButtonRelease(XEvent * event)
+{
+  WScreen *scr = wScreenForRootWindow(event->xbutton.root);
+  
+  if (!wPreferences.disable_root_mouse && event->xbutton.window == scr->root_win) {
+    if (!strcmp(scr->focused_window->wm_class, "GNUstep")) {
+      XSendEvent(dpy, scr->focused_window->client_win, True, ButtonReleaseMask, event);
+    }
+  }
+}
+#endif
+
 static void handleMapNotify(XEvent * event)
 {
 	WWindow *wwin;
